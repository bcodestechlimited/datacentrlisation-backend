// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}
        

enum Role {
  employee
  admin
}

model User {
  id          String    @id @default(uuid())
  email       String    @unique
  password    String?
  role        Role      @default(employee)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  employee    Employee? @relation(fields: [employeeId], references: [id],onDelete: Cascade)
  employeeId  String?   @unique 
  session Session?

  @@map("users")
}

model Employee {
  id          String    @id @default(uuid())
  name        String
  email       String    @unique
  department  String
  salary      Int
 joiningDate DateTime  @default(now())
 createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  user        User?

    @@map("employees")

}

model Session {
  id     String @id @unique @default(uuid())
  userId String @unique
  user   User   @relation(fields: [userId], references: [id],onDelete: Cascade)

  sessionToken String
  expiresAt    DateTime
  createdAt    DateTime @default(now())

  @@index([userId])
  @@map("sessions")
}
